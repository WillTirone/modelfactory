[{"path":"https://willtirone.github.io/modelfactory/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 modelfactory authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://willtirone.github.io/modelfactory/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tirone. Author, maintainer, copyright holder.","code":""},{"path":"https://willtirone.github.io/modelfactory/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tirone W (2024). modelfactory: Combine Statistical Models Tibble Comparison. R package version 0.0.0.9000, https://willtirone.github.io/modelfactory/.","code":"@Manual{,   title = {modelfactory: Combine Statistical Models Into a Tibble for Comparison},   author = {Will Tirone},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://willtirone.github.io/modelfactory/}, }"},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"about","dir":"","previous_headings":"","what":"Combine Statistical Models Into a Tibble for Comparison","title":"Combine Statistical Models Into a Tibble for Comparison","text":"Statisticians often want compare different models fit data set. However, usually involves lot manual code fish items summary() plain model objects. ‘modelfactory’ offers capability pass multiple models get metrics coefficients quick comparison easy--remember syntax.","code":""},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Combine Statistical Models Into a Tibble for Comparison","text":"can install package CRAN : , can install development version modelfactory :","code":"install.packages(\"modelfactory\") # install.packages(\"devtools\") devtools::install_github(\"WillTirone/modelfactory\")"},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Combine Statistical Models Into a Tibble for Comparison","text":"See references tab documentation.","code":""},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Combine Statistical Models Into a Tibble for Comparison","text":"Contributions encouraged welcomed, feel free submit PR open issue!","code":""},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"cran-submission--todo","dir":"","previous_headings":"","what":"CRAN Submission / TODO","title":"Combine Statistical Models Into a Tibble for Comparison","text":"remove unnecessary README stuff delete inst finish / verify functions roxygen correct add examples readme add NEWS.md read release section use use_release_issue()","code":""},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"todo","dir":"","previous_headings":"","what":"TODO:","title":"Combine Statistical Models Into a Tibble for Comparison","text":"expects output","code":""},{"path":"https://willtirone.github.io/modelfactory/index.html","id":"change","dir":"","previous_headings":"","what":"Change","title":"Combine Statistical Models Into a Tibble for Comparison","text":"look r hub","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_coeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","title":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","text":"stack_coeff() takes several lm glm models, pulls coefficients, standard errors, confidence intervals, stacks everything tibble() easy comparison across models.","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_coeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","text":"","code":"stack_coeff(..., ci = 0.95)"},{"path":"https://willtirone.github.io/modelfactory/reference/stack_coeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","text":"... lm glm models summarize combine. ci width confidence, default = 0.95","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_coeff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","text":"tibble() coefficients, confidence intervals, standard errors.","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_coeff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack coefficents, confidence intervals, and standard errors for n models. — stack_coeff","text":"","code":"lm_1 = lm(mpg ~ cyl + disp + hp, data = mtcars) lm_2 = lm(mpg ~ hp + drat + wt, data = mtcars) lm_3 = lm(mpg ~ ., data = mtcars) lm_combined = stack_coeff(lm_1, lm_2, lm_3)  glm_1 = glm(vs ~ drat + hp, data = mtcars) glm_2 = glm(vs ~ wt + qsec, data = mtcars) glm_3 = glm(vs ~ ., data = mtcars) glm_combined = stack_coeff(glm_1, glm_2, glm_3) #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> Waiting for profiling to be done..."},{"path":"https://willtirone.github.io/modelfactory/reference/stack_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","title":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","text":"stack_metrics() calculates basic model metrics like MSE models passed , stacks dataframe comparison. supports lm, glm, lmer models, different metrics calculated . perform model selection based given criteria, makes tedious task , say, comparing R-squared across several models easy.","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","text":"","code":"stack_metrics(...)"},{"path":"https://willtirone.github.io/modelfactory/reference/stack_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","text":"... lm, glm, lmer models summarize combine.","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","text":"tibble() includes variety evaluation metrics.","code":""},{"path":"https://willtirone.github.io/modelfactory/reference/stack_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine model metrics for n number of lm, glm, and lmer models — stack_metrics","text":"","code":"lm_1 = lm(mpg ~ cyl + disp + hp, data = mtcars) lm_2 = lm(mpg ~ hp + drat + wt, data = mtcars) lm_3 = lm(mpg ~ ., data = mtcars) lm_combined = stack_metrics(lm_1, lm_2, lm_3) print(lm_combined) #> # A tibble: 3 × 6 #>   model                                r.squared adj.r.squared   MSE  RMSE   MAE #>   <chr>                                    <dbl>         <dbl> <dbl> <dbl> <dbl> #> 1 lm(formula = mpg ~ cyl + disp + hp,…     0.768         0.743  8.17  2.86  2.32 #> 2 lm(formula = mpg ~ hp + drat + wt, …     0.837         0.819  5.74  2.40  1.91 #> 3 lm(formula = mpg ~ ., data = mtcars)     0.869         0.807  4.61  2.15  1.72  glm_1 = glm(vs ~ drat + hp, data = mtcars) glm_2 = glm(vs ~ wt + qsec, data = mtcars) glm_3 = glm(vs ~ ., data = mtcars) glm_combined = stack_metrics(glm_1, glm_2, glm_3) print(glm_combined) #> # A tibble: 3 × 4 #>   model                                        deviance   AIC   BIC #>   <chr>                                           <dbl> <dbl> <dbl> #> 1 glm(formula = vs ~ drat + hp, data = mtcars)     3.63  29.1  35.0 #> 2 glm(formula = vs ~ wt + qsec, data = mtcars)     2.04  10.8  16.6 #> 3 glm(formula = vs ~ ., data = mtcars)             1.58  18.6  36.2  lmer_1 = lme4::lmer(Sepal.Length ~ (1 | Species), data = iris) lmer_2 = lme4::lmer(Sepal.Length ~ (1 | Species) + Petal.Length, data = iris) lmer_combined = stack_metrics(lmer_1, lmer_2) print(lmer_combined) #> # A tibble: 2 × 4 #>   model                                                     deviance   AIC   BIC #>   <chr>                                                        <dbl> <dbl> <dbl> #> 1 lme4::lmer(formula = Sepal.Length ~ (1 | Species), data …     240.  246.  255. #> 2 lme4::lmer(formula = Sepal.Length ~ (1 | Species) + Peta…     120.  128.  140."},{"path":"https://willtirone.github.io/modelfactory/news/index.html","id":"modelfactory-development-version","dir":"Changelog","previous_headings":"","what":"modelfactory (development version)","title":"modelfactory (development version)","text":"Initial CRAN submission.","code":""}]
